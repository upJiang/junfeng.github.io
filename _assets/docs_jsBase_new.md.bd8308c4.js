import{g as e,f as n,E as t}from"./common-d6bd45c0.js";const o='{"title":"js中new做了什么","frontmatter":{},"headers":[{"level":2,"title":"js中new做了什么","slug":"js中new做了什么"}],"relativePath":"docs/jsBase/new.md","lastUpdated":1627826001298.8733}';var s={};const r=t('<h2 id="js中new做了什么"><a class="header-anchor" href="#js中new做了什么" aria-hidden="true">#</a> js中new做了什么</h2><ul><li>创建一个新对象</li><li>将构造函数的作用域赋给新对象（因此 this 就指向了这个新对象）</li><li>执行构造函数中的代码（为这个新对象添加属性）</li><li>返回新对象</li></ul><blockquote><p>首先明白 obj.<em>proto</em> === Base.prototype</p></blockquote><div class="language-"><pre><code>function Person () {\n    this.name = name;\n    this.age = age;\n    this.sex = sex\n    this.sayName = function () {\n        return this.name;\n    };\n}\nvar person = new Person(&quot;tom&quot;, 21, &quot;famle&quot;);\n\n1.创建一个新对象\n2.将新对象的_proto_指向构造函数的prototype对象\n3.将构造函数的作用域赋值给新对象 （也就是this指向新对象）\n4.执行构造函数中的代码（为这个新对象添加属性）\n5.返回新的对象\nvar Obj = {};\nObj._proto_ =  Person.prototype();\nPerson.call(Obj);\n</code></pre></div>',4);s.render=function(t,o,s,a,i,l){return n(),e("div",null,[r])};export default s;export{o as __pageData};
