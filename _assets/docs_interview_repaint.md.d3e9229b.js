import{g as e,f as l,E as i}from"./common-d6bd45c0.js";const t='{"title":"减少重绘回流的方式","frontmatter":{},"headers":[{"level":2,"title":"减少重绘回流的方式","slug":"减少重绘回流的方式"}],"relativePath":"docs/interview/repaint.md","lastUpdated":1627828744648.189}';var a={};const r=i('<blockquote><p>一个页面至少一次回流，回流大于重绘，回流必定重绘，重绘不一定回流</p></blockquote><p>回流：DOM 结构的修改引发 DOM 几何尺寸变化</p><p>重绘：DOM 结构的修改没有引发 DOM 几何尺寸变化，只是导致了样式的改变</p><h2 id="减少重绘回流的方式"><a class="header-anchor" href="#减少重绘回流的方式" aria-hidden="true">#</a> 减少重绘回流的方式</h2><ul><li>避免频繁使用 style，而是采用修改class的方式。</li><li>将动画效果应用到position属性为absolute或fixed的元素上。</li><li>也可以先为元素设置display: none，操作结束后再把它显示出来。为在display属性为none的元素上进行的DOM操作不会引发回流和重绘</li><li>使用createDocumentFragment进行批量的 DOM 操作。</li><li>对于 resize、scroll 等进行防抖/节流处理。</li><li>避免频繁读取会引发回流/重绘的属性，如果确实需要多次使用，就用一个变量缓存起来。</li><li>利用 CSS3 的transform、opacity、filter这些属性可以实现合成的效果，也就是GPU加速。</li></ul>',5);a.render=function(i,t,a,o,s,n){return l(),e("div",null,[r])};export default a;export{t as __pageData};
