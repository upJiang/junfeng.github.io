import{g as n,f as t,E as e}from"./common-d6bd45c0.js";const o='{"title":"添加 husky","frontmatter":{},"headers":[{"level":2,"title":"添加 husky","slug":"添加-husky"},{"level":2,"title":"添加 eslint、prettier","slug":"添加-eslint、prettier"},{"level":2,"title":"添加 stylelint","slug":"添加-stylelint"},{"level":2,"title":"添加 tsc 的检查","slug":"添加-tsc-的检查"}],"relativePath":"docs/jsAdvanced/standard.md","lastUpdated":1643027186893.0625}';var i={};const r=e('<blockquote><p>vscode 插件安装 Eslint Volar (vue3.0) Prettier Stylelint (0.78.6 高版本无法识别，有问题)</p></blockquote><p>目的：</p><ul><li>保存时自动 eslint 修正、prettier 格式化、stylelint 格式化</li><li>暂存区提交时检测 eslint、stylelint</li><li>代码提交时全局检测ts规范</li></ul><h2 id="添加-husky"><a class="header-anchor" href="#添加-husky" aria-hidden="true">#</a> 添加 husky</h2><blockquote><p>这个其实在我前面的文章有写过，现在采取更简单的方法写一遍，直接使用 lint-staged 搭配 .lintstagedrc 去设置暂存区的stylelint、eslint、以及commit信息的校验</p></blockquote><p><strong>1. 安装依赖</strong></p><div class="language-"><pre><code>@commitlint/cli \n@commitlint/config-conventional\nhusky \nlint-staged\n\nyarn add 以上xxx -D\n</code></pre></div><p><strong>2. 配置 package.json</strong></p><div class="language-"><pre><code> &quot;scripts&quot;: {\n    &quot;lint&quot;: &quot;lint-staged&quot;,  //暂存区 lint 检查，配置文件在 .lintstagedrc\n    &quot;tsc&quot;: &quot;vue-tsc --noEmit --skipLibCheck&quot;,  //ts的检查\n    &quot;prepare&quot;: &quot;husky install&quot;  //安装依赖时下载husky\n  }\n</code></pre></div><p><strong>3. 添加钩子</strong></p><p>pre-commit</p><div class="language-"><pre><code>#!/bin/sh\n. &quot;$(dirname &quot;$0&quot;)/_/husky.sh&quot;\n\n# lint，检查 eslint、stylelint、ts\nyarn lint\necho &quot;---检查开始---&quot;\nyarn tsc\necho &quot;---检查结束---&quot;\n\n# 邮箱的检查\n# EMAIL=$(git config user.email)\n# if [[ ! $EMAIL =~ ^[.[:alnum:]]+@qq\\.com$ ]];\n# then\n#   echo &quot;Your git information is not valid&quot;;\n#   echo &quot;Please run:&quot;\n#   echo &#39;   git config --local user.name &quot;&lt;Your name in qq&gt;&quot;&#39;\n#   echo &#39;   git config --local user.email &quot;&lt;Your alias&gt;@qq.com&quot;&#39;\n#   exit 1;\n# fi;\n</code></pre></div><p>commit-msg，检查提交信息</p><div class="language-"><pre><code>#!/bin/sh\n. &quot;$(dirname &quot;$0&quot;)/_/husky.sh&quot;\n\nnpx --no-install commitlint --edit &quot;$1&quot;\n</code></pre></div><p><strong>4. 添加 commitlint.config.js 配置。使用默认的</strong></p><div class="language-"><pre><code>module.exports = { extends: [&#39;@commitlint/config-conventional&#39;] }\n</code></pre></div><p><strong>5. 添加 .lintstagedrc 配置暂存区检测 eslint、stylelint</strong></p><div class="language-"><pre><code>{\n    &quot;*.{vue,ts,js,jsx}&quot;: &quot;eslint&quot;,\n    &quot;*.{vue,scss,css}&quot;: [\n        &quot;stylelint&quot;\n    ]\n}\n\n//这里不直接 fix ，您也可以加 --fix 参数自动fix\n</code></pre></div><h2 id="添加-eslint、prettier"><a class="header-anchor" href="#添加-eslint、prettier" aria-hidden="true">#</a> 添加 eslint、prettier</h2><p><strong>1. 安装依赖</strong></p><div class="language-"><pre><code>prettier\nbabel-eslint\n@typescript-eslint/eslint-plugin \n@typescript-eslint/parser \neslint \neslint-plugin-vue \neslint-plugin-prettier\n\n//vue专有\n@vue/eslint-config-prettier \n@vue/eslint-config-typescript\n\nyarn add 以上xxx -D\n</code></pre></div><p><strong>2. 添加配置文件 .eslintrc.js 文件</strong></p><div class="language-"><pre><code>module.exports = {\n  root: true,\n\n  env: {\n    node: true,\n  },\n\n  extends: [&#39;plugin:vue/vue3-essential&#39;, &#39;eslint:recommended&#39;, &#39;@vue/prettier&#39;, &#39;@vue/typescript&#39;],\n\n  parserOptions: {\n    parser: &#39;@typescript-eslint/parser&#39;,\n  },\n  globals: {\n    wx: &#39;readonly&#39;,\n  },\n  rules: {\n    &#39;prettier/prettier&#39;: [\n      &#39;error&#39;,\n      {\n        tabWidth: 2,\n        singleQuote: true,\n        semi: false,\n        trailingComma: &#39;es5&#39;,\n        arrowParens: &#39;avoid&#39;,\n        endOfLine: &#39;auto&#39;,\n        printWidth: 100,\n      },\n    ],\n    &#39;no-debugger&#39;: &#39;error&#39;,\n    &#39;comma-dangle&#39;: [\n      &#39;error&#39;,\n      {\n        arrays: &#39;always-multiline&#39;,\n        objects: &#39;always-multiline&#39;,\n        imports: &#39;always-multiline&#39;,\n        exports: &#39;never&#39;,\n        functions: &#39;never&#39;,\n      },\n    ],\n    &#39;vue/no-use-v-if-with-v-for&#39;: [\n      &#39;error&#39;,\n      {\n        allowUsingIterationVar: true,\n      },\n    ],\n    &#39;@typescript-eslint/no-explicit-any&#39;: [&#39;error&#39;], //禁止使用any\n    eqeqeq: 2, //必须使用全等\n    &#39;max-lines&#39;: [&#39;error&#39;, 1000], //限制行数 请勿修改 请优化你的代码\n    complexity: [&#39;error&#39;, 5], // 限制复杂度\n    &#39;require-await&#39;: &#39;error&#39;,\n  },\n}\n</code></pre></div><p><strong>3. 添加配置文件 .prettierrc 文件，vscode 记得设置默认的格式化程序为prettier</strong></p><div class="language-"><pre><code>{\n  &quot;tabWidth&quot;: 2,\n  &quot;singleQuote&quot;: true,\n  &quot;semi&quot;: false,\n  &quot;trailingComma&quot;: &quot;es5&quot;,\n  &quot;arrowParens&quot;: &quot;avoid&quot;,\n  &quot;endOfLine&quot;: &quot;auto&quot;,\n  &quot;printWidth&quot;: 100\n}\n</code></pre></div><p><strong>4. 添加 vscode 的配置，添加 .Vscode 文件夹，在文件夹下新建 settings.json</strong></p><div class="language-"><pre><code>{\n  &quot;editor.formatOnSave&quot;: true,\n  &quot;editor.codeActionsOnSave&quot;: {\n    &quot;source.fixAll.stylelint&quot;: true\n  }\n}\n\n//保存自动格式化\n//保存自动设置stylelint，stylelint后面会讲到\n</code></pre></div><ol start="5"><li>添加 .editorconfig 定义编码风格</li></ol><div class="language-"><pre><code># top-most EditorConfig file\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = false\ninsert_final_newline = false\n</code></pre></div><p>至此，您保存文件的时候应该会自动修正 eslint，并且按照 prettier 格式保存 执行yarn lint 时会检测 暂存区文件的 eslint、stylelint</p><h2 id="添加-stylelint"><a class="header-anchor" href="#添加-stylelint" aria-hidden="true">#</a> 添加 stylelint</h2><p><strong>1. 安装依赖</strong> stylelint 高版本可能会出问题，包括插件版本，我这套目前没问题，Stylelint 插件使用 0.87.6</p><div class="language-"><pre><code>&quot;stylelint&quot;: &quot;^13.13.1&quot;,\n&quot;stylelint-config-prettier&quot;: &quot;^9.0.3&quot;,\n&quot;stylelint-config-standard&quot;: &quot;^22.0.0&quot;,\n&quot;stylelint-order&quot;: &quot;^5.0.0&quot;,\n&quot;stylelint-scss&quot;: &quot;^3.21.0&quot;\n</code></pre></div><p><strong>2. 添加 stylelint.config.js 配置文件</strong></p><div class="language-"><pre><code>module.exports = {\n  root: true,\n  plugins: [&#39;stylelint-order&#39;],\n  extends: [&#39;stylelint-config-standard&#39;, &#39;stylelint-config-prettier&#39;],\n  rules: {\n    &#39;selector-pseudo-class-no-unknown&#39;: [\n      true,\n      {\n        ignorePseudoClasses: [&#39;global&#39;]\n      }\n    ],\n    &#39;selector-pseudo-element-no-unknown&#39;: [\n      true,\n      {\n        ignorePseudoElements: [&#39;v-deep&#39;]\n      }\n    ],\n    &#39;at-rule-no-unknown&#39;: [\n      true,\n      {\n        ignoreAtRules: [\n          &#39;tailwind&#39;,\n          &#39;apply&#39;,\n          &#39;variants&#39;,\n          &#39;responsive&#39;,\n          &#39;screen&#39;,\n          &#39;function&#39;,\n          &#39;if&#39;,\n          &#39;each&#39;,\n          &#39;include&#39;,\n          &#39;mixin&#39;\n        ]\n      }\n    ],\n    &#39;no-empty-source&#39;: null,\n    &#39;named-grid-areas-no-invalid&#39;: null,\n    &#39;unicode-bom&#39;: &#39;never&#39;,\n    &#39;no-descending-specificity&#39;: null,\n    &#39;font-family-no-missing-generic-family-keyword&#39;: null,\n    &#39;declaration-colon-space-after&#39;: &#39;always-single-line&#39;,\n    &#39;declaration-colon-space-before&#39;: &#39;never&#39;,\n    // &#39;declaration-block-trailing-semicolon&#39;: &#39;always&#39;,\n    &#39;rule-empty-line-before&#39;: [\n      &#39;always&#39;,\n      {\n        ignore: [&#39;after-comment&#39;, &#39;first-nested&#39;]\n      }\n    ],\n    &#39;unit-no-unknown&#39;: [\n      true,\n      {\n        ignoreUnits: [&#39;rpx&#39;]\n      }\n    ],\n    &#39;order/order&#39;: [\n      [\n        &#39;dollar-variables&#39;,\n        &#39;custom-properties&#39;,\n        &#39;at-rules&#39;,\n        &#39;declarations&#39;,\n        {\n          type: &#39;at-rule&#39;,\n          name: &#39;supports&#39;\n        },\n        {\n          type: &#39;at-rule&#39;,\n          name: &#39;media&#39;\n        },\n        &#39;rules&#39;\n      ],\n      {\n        severity: &#39;warning&#39;\n      }\n    ],\n    // 按照指定顺序排列\n    &#39;order/properties-order&#39;: [\n      &#39;position&#39;,\n      &#39;content&#39;,\n      &#39;top&#39;,\n      &#39;right&#39;,\n      &#39;bottom&#39;,\n      &#39;left&#39;,\n      &#39;z-index&#39;,\n      &#39;display&#39;,\n      &#39;float&#39;,\n      &#39;width&#39;,\n      &#39;height&#39;,\n      &#39;max-width&#39;,\n      &#39;max-height&#39;,\n      &#39;min-width&#39;,\n      &#39;min-height&#39;,\n      &#39;padding&#39;,\n      &#39;padding-top&#39;,\n      &#39;padding-right&#39;,\n      &#39;padding-bottom&#39;,\n      &#39;padding-left&#39;,\n      &#39;margin&#39;,\n      &#39;margin-top&#39;,\n      &#39;margin-right&#39;,\n      &#39;margin-bottom&#39;,\n      &#39;margin-left&#39;,\n      &#39;margin-collapse&#39;,\n      &#39;margin-top-collapse&#39;,\n      &#39;margin-right-collapse&#39;,\n      &#39;margin-bottom-collapse&#39;,\n      &#39;margin-left-collapse&#39;,\n      &#39;overflow&#39;,\n      &#39;overflow-x&#39;,\n      &#39;overflow-y&#39;,\n      &#39;clip&#39;,\n      &#39;clear&#39;,\n      &#39;font&#39;,\n      &#39;font-family&#39;,\n      &#39;font-size&#39;,\n      &#39;font-smoothing&#39;,\n      &#39;osx-font-smoothing&#39;,\n      &#39;font-style&#39;,\n      &#39;font-weight&#39;,\n      &#39;hyphens&#39;,\n      &#39;src&#39;,\n      &#39;line-height&#39;,\n      &#39;letter-spacing&#39;,\n      &#39;word-spacing&#39;,\n      &#39;color&#39;,\n      &#39;text-align&#39;,\n      &#39;text-decoration&#39;,\n      &#39;text-indent&#39;,\n      &#39;text-overflow&#39;,\n      &#39;text-rendering&#39;,\n      &#39;text-size-adjust&#39;,\n      &#39;text-shadow&#39;,\n      &#39;text-transform&#39;,\n      &#39;word-break&#39;,\n      &#39;word-wrap&#39;,\n      &#39;white-space&#39;,\n      &#39;vertical-align&#39;,\n      &#39;list-style&#39;,\n      &#39;list-style-type&#39;,\n      &#39;list-style-position&#39;,\n      &#39;list-style-image&#39;,\n      &#39;pointer-events&#39;,\n      &#39;cursor&#39;,\n      &#39;background&#39;,\n      &#39;background-attachment&#39;,\n      &#39;background-color&#39;,\n      &#39;background-image&#39;,\n      &#39;background-position&#39;,\n      &#39;background-repeat&#39;,\n      &#39;background-size&#39;,\n      &#39;border&#39;,\n      &#39;border-collapse&#39;,\n      &#39;border-top&#39;,\n      &#39;border-right&#39;,\n      &#39;border-bottom&#39;,\n      &#39;border-left&#39;,\n      &#39;border-color&#39;,\n      &#39;border-image&#39;,\n      &#39;border-top-color&#39;,\n      &#39;border-right-color&#39;,\n      &#39;border-bottom-color&#39;,\n      &#39;border-left-color&#39;,\n      &#39;border-spacing&#39;,\n      &#39;border-style&#39;,\n      &#39;border-top-style&#39;,\n      &#39;border-right-style&#39;,\n      &#39;border-bottom-style&#39;,\n      &#39;border-left-style&#39;,\n      &#39;border-width&#39;,\n      &#39;border-top-width&#39;,\n      &#39;border-right-width&#39;,\n      &#39;border-bottom-width&#39;,\n      &#39;border-left-width&#39;,\n      &#39;border-radius&#39;,\n      &#39;border-top-right-radius&#39;,\n      &#39;border-bottom-right-radius&#39;,\n      &#39;border-bottom-left-radius&#39;,\n      &#39;border-top-left-radius&#39;,\n      &#39;border-radius-topright&#39;,\n      &#39;border-radius-bottomright&#39;,\n      &#39;border-radius-bottomleft&#39;,\n      &#39;border-radius-topleft&#39;,\n      &#39;quotes&#39;,\n      &#39;outline&#39;,\n      &#39;outline-offset&#39;,\n      &#39;opacity&#39;,\n      &#39;filter&#39;,\n      &#39;visibility&#39;,\n      &#39;size&#39;,\n      &#39;zoom&#39;,\n      &#39;transform&#39;,\n      &#39;box-align&#39;,\n      &#39;box-flex&#39;,\n      &#39;box-orient&#39;,\n      &#39;box-pack&#39;,\n      &#39;box-shadow&#39;,\n      &#39;box-sizing&#39;,\n      &#39;table-layout&#39;,\n      &#39;animation&#39;,\n      &#39;animation-delay&#39;,\n      &#39;animation-duration&#39;,\n      &#39;animation-iteration-count&#39;,\n      &#39;animation-name&#39;,\n      &#39;animation-play-state&#39;,\n      &#39;animation-timing-function&#39;,\n      &#39;animation-fill-mode&#39;,\n      &#39;transition&#39;,\n      &#39;transition-delay&#39;,\n      &#39;transition-duration&#39;,\n      &#39;transition-property&#39;,\n      &#39;transition-timing-function&#39;,\n      &#39;background-clip&#39;,\n      &#39;backface-visibility&#39;,\n      &#39;resize&#39;,\n      &#39;appearance&#39;,\n      &#39;user-select&#39;,\n      &#39;interpolation-mode&#39;,\n      &#39;direction&#39;,\n      &#39;marks&#39;,\n      &#39;page&#39;,\n      &#39;set-link-source&#39;,\n      &#39;unicode-bidi&#39;,\n      &#39;speak&#39;\n    ]\n  },\n  ignoreFiles: [&#39;**/*.js&#39;, &#39;**/*.jsx&#39;, &#39;**/*.tsx&#39;, &#39;**/*.ts&#39;]\n}\n</code></pre></div><p><strong>3. 添加 .stylelintignore 忽略文件</strong></p><div class="language-"><pre><code>/dist/*\n/public/*\npublic/*\n*.js\n*.ts\n*.png\n*.jpg\n*.webp\n*.ttf\n*.woff\n</code></pre></div><p>至此，当您保存有样式的文件的时候，会自动帮您格式化样式，在提交代码时会检查eslint、stylelint、commit信息了。</p><h2 id="添加-tsc-的检查"><a class="header-anchor" href="#添加-tsc-的检查" aria-hidden="true">#</a> 添加 tsc 的检查</h2><p>前面在 pre-commit 已经设置了 tsc 检查，在代码提交时会自动全局检测，这个我暂时并不知道如何能够只检测暂存区的ts规范，现在做的是全局检测,这里是针对vue项目的。</p><p><strong>1. 安装依赖</strong></p><div class="language-"><pre><code>yarn add vue-tsc -D\nyarn add @vue/cli-plugin-typescript -D\n</code></pre></div><ol start="2"><li>tsconfig.json 配置</li></ol><div class="language-"><pre><code>{\n  &quot;compilerOptions&quot;: {\n    &quot;target&quot;: &quot;es5&quot;,\n    &quot;module&quot;: &quot;esnext&quot;,\n    &quot;strict&quot;: true,\n    &quot;jsx&quot;: &quot;preserve&quot;,\n    &quot;importHelpers&quot;: true,\n    &quot;moduleResolution&quot;: &quot;node&quot;,\n    &quot;allowJs&quot;: true,\n    &quot;esModuleInterop&quot;: true,\n    &quot;allowSyntheticDefaultImports&quot;: true,\n    &quot;sourceMap&quot;: true,\n    &quot;baseUrl&quot;: &quot;.&quot;,\n    &quot;types&quot;: [&quot;webpack-env&quot;],\n    &quot;paths&quot;: {\n      &quot;@/*&quot;: [&quot;src/*&quot;]\n    },\n    &quot;lib&quot;: [&quot;esnext&quot;, &quot;dom&quot;, &quot;dom.iterable&quot;, &quot;scripthost&quot;]\n  },\n  &quot;include&quot;: [&quot;src/**/*.ts&quot;, &quot;src/**/*.tsx&quot;, &quot;src/**/*.vue&quot;, &quot;tests/**/*.ts&quot;, &quot;tests/**/*.tsx&quot;],\n  &quot;exclude&quot;: [&quot;node_modules&quot;]\n}\n</code></pre></div><p>总结：现在我们已经做到在保存时自动 eslint 修正、prettier 格式化、stylelint 格式化 暂存区提交时检测 eslint、stylelint，全局检测ts规范。 <a href="https://github.com/upJiang/jiangVue3Test" target="_blank" rel="noopener noreferrer">项目地址</a></p>',45);i.render=function(e,o,i,s,l,a){return t(),n("div",null,[r])};export default i;export{o as __pageData};
