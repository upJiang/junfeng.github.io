import{g as i,f as n,E as t}from"./common-d6bd45c0.js";const a='{"title":"animation 属性和 transition 属性","frontmatter":{},"headers":[{"level":2,"title":"animation 属性和 transition 属性","slug":"animation-属性和-transition-属性"}],"relativePath":"docs/reStudy/css_animation.md","lastUpdated":1639657876280.8958}';var o={};const e=t('<h2 id="animation-属性和-transition-属性"><a class="header-anchor" href="#animation-属性和-transition-属性" aria-hidden="true">#</a> animation 属性和 transition 属性</h2><p>了解一下 animation 属性的基本用法:</p><div class="language-"><pre><code>@keyframes mykf\n{\n  from {background: red;}\n  to {background: yellow;}\n}\n\ndiv\n{\n    animation:mykf 5s infinite;\n}\n</code></pre></div><p>这里展示了 animation 的基本用法，实际上 animation 分成六个部分：</p><ul><li>animation-name 动画的名称，这是一个 keyframes 类型的值</li><li>animation-duration 动画的时长；</li><li>animation-timing-function 动画的时间曲线；</li><li>animation-delay 动画开始前的延迟；</li><li>animation-iteration-count 动画的播放次数；</li><li>animation-direction 动画的方向。</li></ul><p>transition 与 animation 相比来说，是简单得多的一个属性。它有四个部分：</p><ul><li>transition-property 要变换的属性；</li><li>transition-duration 变换的时长；</li><li>transition-timing-function 时间曲线；</li><li>transition-delay 延迟。</li></ul><p>这里的四个部分，可以重复多次，指定多个属性的变换规则。</p><p>实际上，有时候我们会把 transition 和 animation 组合，抛弃 animation 的 timing-function，以编排不同段用不同的曲线。</p><div class="language-"><pre><code>@keyframes mykf {\n  from { top: 0; transition:top ease}\n  50% { top: 30px;transition:top ease-in }\n  75% { top: 10px;transition:top ease-out }\n  to { top: 0; transition:top linear}\n}\n</code></pre></div>',10);o.render=function(t,a,o,r,l,s){return n(),i("div",null,[e])};export default o;export{a as __pageData};
