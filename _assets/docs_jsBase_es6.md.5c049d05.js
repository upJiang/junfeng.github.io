import{g as e,f as a,E as t}from"./common-d6bd45c0.js";const p='{"title":"let,var,const","frontmatter":{},"headers":[{"level":2,"title":"let,var,const","slug":"let-var-const"},{"level":2,"title":"解构赋值","slug":"解构赋值"},{"level":2,"title":"字符串方法","slug":"字符串方法"},{"level":3,"title":"字符串模板","slug":"字符串模板"},{"level":3,"title":"字符串查找","slug":"字符串查找"},{"level":3,"title":"字符串检测以什么开头/结尾","slug":"字符串检测以什么开头-结尾"},{"level":3,"title":"让字符串重复","slug":"让字符串重复"},{"level":3,"title":"字符串填充","slug":"字符串填充"},{"level":3,"title":"函数变化","slug":"函数变化"},{"level":3,"title":"扩展运算符 rest运算符 可逆","slug":"扩展运算符-rest运算符-可逆"},{"level":2,"title":"箭头函数","slug":"箭头函数"},{"level":2,"title":"数组方法","slug":"数组方法"},{"level":3,"title":"forEach","slug":"foreach"},{"level":3,"title":"map","slug":"map"},{"level":3,"title":"filter","slug":"filter"},{"level":3,"title":"some","slug":"some"},{"level":3,"title":"every","slug":"every"},{"level":3,"title":"reduce","slug":"reduce"},{"level":3,"title":"for...of...","slug":"for-of"},{"level":3,"title":"array.from","slug":"array-from"},{"level":3,"title":"array.of","slug":"array-of"},{"level":3,"title":"arr.find()  arr.findIndex()","slug":"arr-find-arr-findindex"},{"level":3,"title":"arr.fill()","slug":"arr-fill"},{"level":2,"title":"对象Object","slug":"对象object"},{"level":3,"title":"Object.is()","slug":"object-is"},{"level":3,"title":"Object.assign()","slug":"object-assign"},{"level":2,"title":"Promise","slug":"promise"},{"level":2,"title":"模块化","slug":"模块化"},{"level":3,"title":"定义模块","slug":"定义模块"},{"level":3,"title":"使用","slug":"使用"},{"level":3,"title":"import详述","slug":"import详述"},{"level":3,"title":"优点","slug":"优点"},{"level":2,"title":"类class","slug":"类class"},{"level":3,"title":"get、set的使用","slug":"get、set的使用"},{"level":3,"title":"继承","slug":"继承"},{"level":2,"title":"symbol","slug":"symbol"},{"level":3,"title":"定义","slug":"定义"},{"level":3,"title":"注意","slug":"注意"},{"level":2,"title":"generator","slug":"generator"},{"level":2,"title":"Set","slug":"set"},{"level":3,"title":"用法","slug":"用法"},{"level":3,"title":"链式增加","slug":"链式增加"},{"level":3,"title":"数组去重","slug":"数组去重"},{"level":3,"title":"set数据结构变成数组","slug":"set数据结构变成数组"},{"level":2,"title":"Map","slug":"map-2"},{"level":2,"title":"数字(数值)变化","slug":"数字-数值-变化"},{"level":2,"title":"es2018新增","slug":"es2018新增"},{"level":3,"title":"命名捕获","slug":"命名捕获"},{"level":3,"title":"replace 替换","slug":"replace-替换"},{"level":3,"title":"dotAll模式","slug":"dotall模式"},{"level":3,"title":"标签函数","slug":"标签函数"},{"level":3,"title":"Proxy","slug":"proxy"}],"relativePath":"docs/jsBase/es6.md","lastUpdated":1639657876235.9192}';var c={};const i=t('<blockquote><p>es6 即为 es2015,之后的版本均为es2016之类，或者是es6.1</p></blockquote><h2 id="let-var-const"><a class="header-anchor" href="#let-var-const" aria-hidden="true">#</a> let,var,const</h2><div class="language-"><pre><code>var a = 12;\nfunction fn(){\n   alert(a)\n   var a = 5;\n}\n\na输出undefinded,不会报错，此处为js的预解析\nvar 重复定义相同变量不会报错，直接覆盖\n</code></pre></div><div class="language-"><pre><code>let a = 12;\nfunction fn(){\n   alert(a)  //暂时性死区 TDZ\n   let a = 5;\n}\n\n报错undefinder,不会输出,let不存在js的预解析\nlet不允许重复定义，直接报错\n</code></pre></div><ul><li>函数提升优先于变量提升，函数提升会把整个函数挪到作用域顶部，变量提升只会把声明挪到作用域顶部，声明而不会赋值</li><li>var 存在提升，我们能在声明之前使用。let、const 因为暂时性死区的原因，不能在声明前使用</li><li>var 在全局作用域下声明变量会导致变量挂载在 window上，其他两者不会</li><li>let 和 const 作用基本一致，但是后者声明的变量不能再次赋值</li></ul><h2 id="解构赋值"><a class="header-anchor" href="#解构赋值" aria-hidden="true">#</a> 解构赋值</h2><div class="language-"><pre><code>let {a,b,c=&quot;默认值&quot;} = {&quot;aaa&quot;,&quot;bbb&quot;}\nconst {a,b,c} = import &#39;./aa&#39;\n</code></pre></div><h2 id="字符串方法"><a class="header-anchor" href="#字符串方法" aria-hidden="true">#</a> 字符串方法</h2><h3 id="字符串模板"><a class="header-anchor" href="#字符串模板" aria-hidden="true">#</a> 字符串模板</h3><p>let a = <code>士大夫撒${a}感到反感</code></p><h3 id="字符串查找"><a class="header-anchor" href="#字符串查找" aria-hidden="true">#</a> 字符串查找</h3><div class="language-"><pre><code>str.includes(要找的东西)  返回true或者false\nstr.indexOf(要找的东西)  返回索引位置，没找到返回-1\n</code></pre></div><h3 id="字符串检测以什么开头-结尾"><a class="header-anchor" href="#字符串检测以什么开头-结尾" aria-hidden="true">#</a> 字符串检测以什么开头/结尾</h3><div class="language-"><pre><code>str.startsWith/str.endsWith(要检测的东西) 返回true或者false\n</code></pre></div><h3 id="让字符串重复"><a class="header-anchor" href="#让字符串重复" aria-hidden="true">#</a> 让字符串重复</h3><div class="language-"><pre><code>let str = &quot;a&quot;\nstr.repeat(3)   输出aaa \n</code></pre></div><h3 id="字符串填充"><a class="header-anchor" href="#字符串填充" aria-hidden="true">#</a> 字符串填充</h3><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/712c4c52048b46b7bb6b0b1fd40698b6~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/712c4c52048b46b7bb6b0b1fd40698b6~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="函数变化"><a class="header-anchor" href="#函数变化" aria-hidden="true">#</a> 函数变化</h3><div class="language-"><pre><code>1.函数默认参数\n    function show({x=0,y=0}={}) {\n        console.log(x,y);\n    }\n    show();\n2.函数参数默认已经定义了，不能再使用let，const在函数内定义声明。\n    function show(a=10){\n        let a = 101;\n        console.log(a);\n    }\n    show();\n</code></pre></div><h3 id="扩展运算符-rest运算符-可逆"><a class="header-anchor" href="#扩展运算符-rest运算符-可逆" aria-hidden="true">#</a> 扩展运算符 rest运算符 可逆</h3><div class="language-"><pre><code>字符串转数组\nfunction show(...[a,b,c]) {\nconsole.log(a,b,c);\n}\nshow(2,3,4);\n数组转字符串\nfunction show(...array) {\nconsole.log(array);\n}\nshow([a,b,c]);\n剩余参数只能放末尾,否则报错\nlet a = [a,b,c]\nlet b = [&quot;ssf&quot;,&quot;fs&quot;,..a]\n复制数组内容，而不是地址\nlet a = [a,b,c]\nlet b = [...a]\n</code></pre></div><h2 id="箭头函数"><a class="header-anchor" href="#箭头函数" aria-hidden="true">#</a> 箭头函数</h2><div class="language-"><pre><code>() =&gt; a\n() =&gt; {\n    语句\n    return;\n}\n\nlet show = (a) =&gt;a    //参数，返回值\nshow(&quot;aaa&quot;)\n</code></pre></div><blockquote><p>使用箭头函数时，this指向定义函数的位置，而不是函数内部，故在写小程序请求时外面包了已成promise之后不需要let self= this ,它直接指向外层</p></blockquote><p><a data-fancybox title="image.png" href="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cde7835210f64a33a59b86ec1cc0185e~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cde7835210f64a33a59b86ec1cc0185e~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h2 id="数组方法"><a class="header-anchor" href="#数组方法" aria-hidden="true">#</a> 数组方法</h2><h3 id="foreach"><a class="header-anchor" href="#foreach" aria-hidden="true">#</a> forEach</h3><div class="language-"><pre><code>arr.forEach(val,index) =&gt;{\n}\n</code></pre></div><h3 id="map"><a class="header-anchor" href="#map" aria-hidden="true">#</a> map</h3><blockquote><p>map,必须return，return一个数组，对数据进行改造，返回改造后的数组</p></blockquote><p><a data-fancybox title="image.png" href="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fcf06b61d19c49c6b3eab8e5f02c8248~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fcf06b61d19c49c6b3eab8e5f02c8248~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="filter"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h3><blockquote><p>过滤不合格的条件，rutrun条件，符合的数组选项保留下来,返回符合条件的数组</p></blockquote><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/583c205bc4a74d16bc53b88a63bf9c09~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/583c205bc4a74d16bc53b88a63bf9c09~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="some"><a class="header-anchor" href="#some" aria-hidden="true">#</a> some</h3><blockquote><p>arr.some():类似查找，数组里面某一个元素符合条件，返回true</p></blockquote><p><a data-fancybox title="image.png" href="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c8ea55ccf2814ddb986e97e936295faa~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c8ea55ccf2814ddb986e97e936295faa~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="every"><a class="header-anchor" href="#every" aria-hidden="true">#</a> every</h3><blockquote><p>arr.every():数组里面所有的元素都要符合条件，才返回true</p></blockquote><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bf46a068e33c424288142909809e7cfa~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bf46a068e33c424288142909809e7cfa~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="reduce"><a class="header-anchor" href="#reduce" aria-hidden="true">#</a> reduce</h3><blockquote><p>可用于求和，操作后结果作为prev，再与cur操作，依此类推，reduceRight 从右往左</p></blockquote><p><a data-fancybox title="image.png" href="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5844735a6f8749f78cedf159bf3ef723~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5844735a6f8749f78cedf159bf3ef723~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="for-of"><a class="header-anchor" href="#for-of" aria-hidden="true">#</a> for...of...</h3><blockquote><p>arr.keys() 数组下标 arr.entries() 数组某一项</p></blockquote><p><a data-fancybox title="image.png" href="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/754e9d1923694852b4d97c2ce4e32e1c~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/754e9d1923694852b4d97c2ce4e32e1c~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="array-from"><a class="header-anchor" href="#array-from" aria-hidden="true">#</a> array.from</h3><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a51bc957f31c4422a59a2fb941993df9~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a51bc957f31c4422a59a2fb941993df9~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/878ede2f6d8b4eb78efe688078329962~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/878ede2f6d8b4eb78efe688078329962~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="array-of"><a class="header-anchor" href="#array-of" aria-hidden="true">#</a> array.of</h3><blockquote><p>类似于... 将一组数据转成数组</p></blockquote><p><a data-fancybox title="image.png" href="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d474dc313c1d4956a02938a2748f24c6~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d474dc313c1d4956a02938a2748f24c6~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="arr-find-arr-findindex"><a class="header-anchor" href="#arr-find-arr-findindex" aria-hidden="true">#</a> arr.find() arr.findIndex()</h3><p><a data-fancybox title="image.png" href="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8e883985517641a98adab338e769ffa6~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8e883985517641a98adab338e769ffa6~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71663644c0e5449b8593ca53a16d1bb6~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71663644c0e5449b8593ca53a16d1bb6~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="arr-fill"><a class="header-anchor" href="#arr-fill" aria-hidden="true">#</a> arr.fill()</h3><blockquote><p>arr.fill(填充的东西，开始位置，结束位置)</p></blockquote><p><a data-fancybox title="image.png" href="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eb00777c174440fab050ab1dd3e9a450~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eb00777c174440fab050ab1dd3e9a450~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/362505b0ca8e48ceb6f42f32513ec12e~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/362505b0ca8e48ceb6f42f32513ec12e~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h2 id="对象object"><a class="header-anchor" href="#对象object" aria-hidden="true">#</a> 对象Object</h2><h3 id="object-is"><a class="header-anchor" href="#object-is" aria-hidden="true">#</a> <a href="http://Object.is" target="_blank" rel="noopener noreferrer">Object.is</a>()</h3><blockquote><p>比较两个对象，只要肉眼看到相同就相等</p></blockquote><div class="language-"><pre><code>Object.is(NaN,NaN)  //true\nObject.is(+0,-0))  //false\n</code></pre></div><h3 id="object-assign"><a class="header-anchor" href="#object-assign" aria-hidden="true">#</a> Object.assign()</h3><blockquote><p>浅拷贝，Object.assign(目标源，数据，数据) 合并对象，将后面的对象合并到目标对象中，若有重复，后面的替换前面的</p></blockquote><p><a data-fancybox title="image.png" href="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ae6c4b9336914ba7b0a73091da4cb0f2~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ae6c4b9336914ba7b0a73091da4cb0f2~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a> 输出: {a:2,b:2,c:3}</p><h2 id="promise"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> Promise</h2><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d863f64add6b46999b4ddcb36c9eda94~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d863f64add6b46999b4ddcb36c9eda94~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6e1d83456f5f4e5b9d108c1683aae034~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6e1d83456f5f4e5b9d108c1683aae034~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9ededed16e2e4e039f5cc1c0ff7cd4c7~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9ededed16e2e4e039f5cc1c0ff7cd4c7~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/24bc98f8d41d4d808559e2d656e5a949~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/24bc98f8d41d4d808559e2d656e5a949~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7aa5e8f08dfa4b1c88e33be99e766f7e~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7aa5e8f08dfa4b1c88e33be99e766f7e~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/88e5af2520ca4554abf770fc994f937d~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/88e5af2520ca4554abf770fc994f937d~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h2 id="模块化"><a class="header-anchor" href="#模块化" aria-hidden="true">#</a> 模块化</h2><blockquote><p>注意：1.要放在服务器环境才可以使用; 2.import &#39;./modules/1.js&#39;;</p></blockquote><h3 id="定义模块"><a class="header-anchor" href="#定义模块" aria-hidden="true">#</a> 定义模块</h3><div class="language-"><pre><code>export const a = 12;\nexport{\na as aaa,\nb as banana\n}\nexport default 12;\n</code></pre></div><h3 id="使用"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><div class="language-"><pre><code>import &#39;./modules/1.js&#39;;\nimport {a,b ,c} from &#39;./modules/2.js&#39;\nimport * as modTwo from &#39;./modules/2.js&#39;\nimport a from &#39;./modules/2.js&#39; //只有default出来的不用花阔号\n\n使用模块：\n&lt;script type=&quot;module&quot; src=&quot;./main.js&quot;&gt;&lt;/script&gt;\n</code></pre></div><h3 id="import详述"><a class="header-anchor" href="#import详述" aria-hidden="true">#</a> import详述</h3><ol><li>import可以是相对路径，也可以是绝对路径<br> import &quot;<a href="https://code.jquery.com/jquery-3.3.1.js" target="_blank" rel="noopener noreferrer">https://code.jquery.com/jquery-3.3.1.js</a>&quot;</li><li>import模块只引入一次，无论你导入多少次</li><li>import &#39;./modules/1.js&#39;;如果这么用，相等于引入文件</li><li>import 有提升的效果，import会自动提升到顶部，首先执行。</li><li>导出去模块内容，如果里面有定时器更改，外面也会改动，不像Comon规范缓存</li></ol><p>import() 类似node里面require，可以动态引入的，，而且他是有返回值的，是个promise对象，而默认import语法不能写到if之类里面，因为他是静态的，必须先引入再调用。</p><div class="language-"><pre><code>import(&#39;./modules/1.js&#39;).then({}res=&gt;{\nconsole.log(res.a + res.b);\n});\n</code></pre></div><h3 id="优点"><a class="header-anchor" href="#优点" aria-hidden="true">#</a> 优点</h3><ol><li>按需加载</li></ol><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/979cfde4246944d9ba292b26011a3940~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/979cfde4246944d9ba292b26011a3940~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><ol start="2"><li><p>可以写到if中</p></li><li><p>路径也是可以动态的,可以结合 Promise.all来用</p></li></ol><p><a data-fancybox title="image.png" href="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc5976e9cb944770b3d137fb54aad6e0~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc5976e9cb944770b3d137fb54aad6e0~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h2 id="类class"><a class="header-anchor" href="#类class" aria-hidden="true">#</a> 类class</h2><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a793e5d68b494b8fa8259d87963155aa~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a793e5d68b494b8fa8259d87963155aa~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p>可以用变量定义方法名，加[]<br></p><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8e9cd833241245d8b2fc096f6aef8814~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8e9cd833241245d8b2fc096f6aef8814~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="get、set的使用"><a class="header-anchor" href="#get、set的使用" aria-hidden="true">#</a> get、set的使用</h3><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3cda283637f6493c981e982e78ae06e9~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3cda283637f6493c981e982e78ae06e9~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="继承"><a class="header-anchor" href="#继承" aria-hidden="true">#</a> 继承</h3><p><a data-fancybox title="image.png" href="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ecb736ae0887432695f584447ccf4fde~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ecb736ae0887432695f584447ccf4fde~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/50f7fdaa32d2471b8e312f977b858456~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/50f7fdaa32d2471b8e312f977b858456~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h2 id="symbol"><a class="header-anchor" href="#symbol" aria-hidden="true">#</a> symbol</h2><h3 id="定义"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h3><p>let syml = Symbpl(&#39;aaa&#39;);</p><h3 id="注意"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h3><ol><li>Symbol 不能 new</li><li>Symbol() 返回是一个唯一值。民间传说，做一个key，定义一些唯一或者私有的一些东西</li><li>Symbol是一个单独的数据类型，就叫symbol，基本类型。</li><li>如果symbol作为key，用for-in循环是出不来的(比如用json)</li></ol><h2 id="generator"><a class="header-anchor" href="#generator" aria-hidden="true">#</a> generator</h2><blockquote><p>generator 函数 解决异步深度嵌套。手动调用，每执行一次next()，就执行一个yield的方法</p></blockquote><p><a data-fancybox title="image.png" href="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1b75aa4db3ee4c608b6501d79e3a8f78~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1b75aa4db3ee4c608b6501d79e3a8f78~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p>generator结合axios数据请求： <a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ce4a18ec5e44b8c921b62a8fe2ea7bb~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ce4a18ec5e44b8c921b62a8fe2ea7bb~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a79f0c54715d46339fce0f38f2e09977~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a79f0c54715d46339fce0f38f2e09977~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h2 id="set"><a class="header-anchor" href="#set" aria-hidden="true">#</a> Set</h2><blockquote><p>Set数据解构：类似数组，但是里面不能有重复值</p></blockquote><div class="language-"><pre><code>let setArr = new Set([&#39;a&#39;,&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;c&#39;)\n输出 Set(3) {&#39;a&#39;,&#39;b&#39;,&#39;c&#39;}\n</code></pre></div><h3 id="用法"><a class="header-anchor" href="#用法" aria-hidden="true">#</a> 用法</h3><p><a data-fancybox title="image.png" href="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b996361a983143c6ac9bc35e1b5556c7~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b996361a983143c6ac9bc35e1b5556c7~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="链式增加"><a class="header-anchor" href="#链式增加" aria-hidden="true">#</a> 链式增加</h3><div class="language-"><pre><code>let setArr = new Set().add(&#39;a&#39;).add(&#39;b&#39;).add(&#39;c&#39;);\n</code></pre></div><h3 id="数组去重"><a class="header-anchor" href="#数组去重" aria-hidden="true">#</a> 数组去重</h3><div class="language-"><pre><code>let arr = [1,2,3,1];\nlet newArr = [...new Set(arr)];\nconsole.log(newArr);\n</code></pre></div><h3 id="set数据结构变成数组"><a class="header-anchor" href="#set数据结构变成数组" aria-hidden="true">#</a> set数据结构变成数组</h3><div class="language-"><pre><code>[...set]\n然后set变成数组之后，一些有关于数组的东西就可以使用了，比如map循环和filter过滤\n</code></pre></div><blockquote><p>new Set([]);存放数组，可用add添加json对象<br> new WeakSet({});存放是对象json，一般不用，不靠谱<br> 确认，初始往里面加东西，是不行的，最好用add去添加吧。</p></blockquote><h2 id="map-2"><a class="header-anchor" href="#map-2" aria-hidden="true">#</a> Map</h2><blockquote><p>类似json，但是json的键(key)只能是字符串,map的可以是任何类型的,用(key,value)标识，以key获取或者设置</p></blockquote><p>使用：</p><div class="language-"><pre><code>let map = new Map();\nmap.set(key,value);//set是设置一个值\nmap.get(key,value);//获取一个值\nmap.delete(key);//删除一个值\nmap.has(key);//有没有这个值\nmap.clear();//清空\n\n如：\nlet map = new Map();\nmap.set(&#39;sdas&#39;,&#39;sadfg&#39;);\nconsole.log(map);\n\n循环：\nfor(let [key,value] of map){}\nfor(let key of map.keys()){}\nfor(let value of map.values()){}\nfor(let [k,v] of map.entries()){}\nmap.forEach((value,key)=&gt;{\nconsole.log(value,key);\n})\n\n=================\nweakMap//key只能是对象，现实中不建议使用\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n</code></pre></div><p>总结:</p><ul><li>set 里面是数组，不重复，没有key，没有get方法。</li><li>map对json功能增强，key可以是任意类型值。</li></ul><h2 id="数字-数值-变化"><a class="header-anchor" href="#数字-数值-变化" aria-hidden="true">#</a> 数字(数值)变化</h2><div class="language-"><pre><code>二进制 八进制 十六进制\n==================================\nNumber()、parseInt()、parseFloat()\n==================================\nNumber.isNaN(NaN) --&gt;true\nNumber.isFinite(a) 判断是不是数字\nNumber.isInterger(a) //判断数字是不是整数\n===================================\nNumber.parseInt();\nNumber.parseFloat();\n===================================\n安全整数：\n2**3 == 2^3\n安全整数 [-(2^53)-1，(2^53)-1],\nNumber.isSafeInterger(a);\n===================================\nMath:\nMath.abs();//绝对值\nMath.sqrt();开方\nMath.sin();\n\nMath.trunc(1.1);//截断，保留整数部分1\nMath.sign(-10) 用来判断一个数是正数，还是负数还是0，其他值是NaN\nMath.cbrt(27);//计算一个数的立方根3\n</code></pre></div><h2 id="es2018新增"><a class="header-anchor" href="#es2018新增" aria-hidden="true">#</a> es2018新增</h2><p><a href="https://mp.weixin.qq.com/s/AfTLs4FJaeir6Lv3hk5UAg" target="_blank" rel="noopener noreferrer">详解 ES 2018 新特性</a></p><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/32b044ab6a774f15b2f9a1eea7318b16~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/32b044ab6a774f15b2f9a1eea7318b16~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1c454f9204a4ed19664ef9c67f40402~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1c454f9204a4ed19664ef9c67f40402~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="命名捕获"><a class="header-anchor" href="#命名捕获" aria-hidden="true">#</a> 命名捕获</h3><p><a data-fancybox title="image.png" href="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1c454f9204a4ed19664ef9c67f40402~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1c454f9204a4ed19664ef9c67f40402~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a><br><a data-fancybox title="image.png" href="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7d3629bdf0f74c24a99ccce49fcfb827~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7d3629bdf0f74c24a99ccce49fcfb827~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="replace-替换"><a class="header-anchor" href="#replace-替换" aria-hidden="true">#</a> replace 替换</h3><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a0556dfba57d4607800b1f5ea25366e7~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a0556dfba57d4607800b1f5ea25366e7~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a><br></p><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a6239679ceaf4271a35c5bb7547e84c4~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a6239679ceaf4271a35c5bb7547e84c4~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="dotall模式"><a class="header-anchor" href="#dotall模式" aria-hidden="true">#</a> dotAll模式</h3><p><a data-fancybox title="image.png" href="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/274d33b7b59a441999fdb0944c35631c~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/274d33b7b59a441999fdb0944c35631c~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="标签函数"><a class="header-anchor" href="#标签函数" aria-hidden="true">#</a> 标签函数</h3><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/49378e7aa520418da80c1c4fbabeef2a~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/49378e7aa520418da80c1c4fbabeef2a~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h3 id="proxy"><a class="header-anchor" href="#proxy" aria-hidden="true">#</a> Proxy</h3><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2b7c4ffff5a3419ea3d7dfad1d42c8c8~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2b7c4ffff5a3419ea3d7dfad1d42c8c8~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/494f69c61de140faa8a61744f0867cf3~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/494f69c61de140faa8a61744f0867cf3~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fb512b7762fc4e328b822831e51b2613~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fb512b7762fc4e328b822831e51b2613~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a><br><a data-fancybox title="image.png" href="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2e630ee4b7894870b16da23ed74d1da0~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2e630ee4b7894870b16da23ed74d1da0~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><h4 id="set-设置，拦截"><a class="header-anchor" href="#set-设置，拦截" aria-hidden="true">#</a> set():设置，拦截</h4><p>设置一个年龄，保证是整数，范围不能超过200。</p><div class="language-"><pre><code>let obj = new Proxy({},{\nset(target,prop,value){\nif(prop == &#39;age&#39;){\nif(!Number.isInteger(value)){\nthrow new IypeError(&#39;年龄必须为整数&#39;);\n}\nif(value&gt;200 || value &lt; 0){\nthrow new RangeError(&#39;年龄超标了,必须小于200，大于0&#39;);\n}\n}\ntarget[prop] = value;\n}\n});\nobj.age = -2;\nconsole.log(obj);\n</code></pre></div><h4 id="deleteproperty-删除，拦截"><a class="header-anchor" href="#deleteproperty-删除，拦截" aria-hidden="true">#</a> deleteProperty():删除，拦截</h4><div class="language-"><pre><code>let json = {\nname : &#39;Hansen&#39;,\nage : &#39;22&#39;\n};\nlet newJson = new Proxy(json,{\ndeleteProperty(target,property){\nconsole.log(&#39;您要删除&#39;+property+&#39;属性&#39;);\ndelete target[property];\n}\n});\ndelete newJson.age;\nconsole.log(newJson);\n</code></pre></div><h4 id="has-检测有没有"><a class="header-anchor" href="#has-检测有没有" aria-hidden="true">#</a> has():检测有没有</h4><div class="language-"><pre><code>let json = {\nname : &#39;Hansen&#39;,\nage : &#39;22&#39;\n};\nlet newJson = new Proxy(json,{\nhas(target,property){\nconsole.log(&#39;判断是否存在调用has方法&#39;);\nreturn property in target;\n}\n});\nconsole.log(&#39;age&#39; in newJson);\n//console.log(newJson);\n</code></pre></div><h4 id="apply-拦截方法（函数）"><a class="header-anchor" href="#apply-拦截方法（函数）" aria-hidden="true">#</a> apply():拦截方法（函数）</h4><div class="language-"><pre><code>function fn() {\nreturn &#39;我是一个快乐小函数！&#39;;\n}\nlet newFn = new Proxy(fn,{\napply(){\nreturn &#39;函数吗？&#39;\n}\n});\nconsole.log(newFn());\n</code></pre></div><h4 id="reflect-apply-函数的调用，this指向，参数数组"><a class="header-anchor" href="#reflect-apply-函数的调用，this指向，参数数组" aria-hidden="true">#</a> Reflect.apply(函数的调用，this指向，参数数组)</h4><div class="language-"><pre><code>Reflect.apply(函数的调用，this指向，参数数组)；\nfn.call();\n与fn.apply()；类似\nReflec反射的使用:\n‘assign’ in Object -&gt; Relect.has(Object,&#39;assign&#39;);\n如delete json.a -&gt; Relect.deleteProperty(json,&#39;a&#39;);\n</code></pre></div><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4d772b217d8147eab9ea88d60a8859b2~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4d772b217d8147eab9ea88d60a8859b2~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bb928770bdbc4124ac6372a259afa23c~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bb928770bdbc4124ac6372a259afa23c~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p><a href="https://es6.ruanyifeng.com/" target="_blank" rel="noopener noreferrer">es6入门教程</a></p><p><a href="https://study.163.com/course/courseLearn.htm?courseId=1005211046#/learn/video?lessonId=1051940974&amp;courseId=1005211046" target="_blank" rel="noopener noreferrer">es5入门到进阶视频地址</a></p>',160);c.render=function(t,p,c,r,n,f){return a(),e("div",null,[i])};export default c;export{p as __pageData};
