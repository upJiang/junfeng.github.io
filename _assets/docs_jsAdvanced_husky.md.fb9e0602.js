import{g as n,f as e,E as t}from"./common-d6bd45c0.js";const o='{"title":"安装依赖","frontmatter":{},"headers":[{"level":3,"title":"安装依赖","slug":"安装依赖"},{"level":3,"title":"packgae.json","slug":"packgae-json"},{"level":3,"title":"添加钩子","slug":"添加钩子"}],"relativePath":"docs/jsAdvanced/husky.md","lastUpdated":1631546828685.0881}';var a={};const i=t('<blockquote><p>husky：Git hooks 工具，对git执行的一些命令，通过对应的hooks钩子触发，执行自定义的脚本程序 可以防止使用 Git hooks 的一些不好的 commit 或者 push。</p></blockquote><p><a href="https://github.com/typicode/husky" target="_blank" rel="noopener noreferrer">husky github地址</a></p><h3 id="安装依赖"><a class="header-anchor" href="#安装依赖" aria-hidden="true">#</a> 安装依赖</h3><div class="language-"><pre><code>yarn add @commitlint/cli -D \nyarn add @commitlint/config-conventional -D \nyarn add husky -D\n</code></pre></div><h3 id="packgae-json"><a class="header-anchor" href="#packgae-json" aria-hidden="true">#</a> packgae.json</h3><div class="language-"><pre><code>添加命令 \n&quot;prepare&quot;: &quot;husky install&quot;, \n&quot;commitlint&quot;: &quot;commitlint --config commitlint.config.js -e -V&quot;\n\n添加husky \n&quot;husky&quot;: \n    { \n        &quot;hooks&quot;: \n            { \n                &quot;pre-commit&quot;: &quot;lint-staged&quot;, \n                &quot;commit-msg&quot;: &quot;commitlint -E $HUSKY_GIT_PARAMS&quot; \n            } \n    }\n\n执行yarn add husky 因为添加了prepare，所以会自动生成husky文件夹\n</code></pre></div><h3 id="添加钩子"><a class="header-anchor" href="#添加钩子" aria-hidden="true">#</a> 添加钩子</h3><p>添加pre-commit钩子</p><div class="language-"><pre><code>npx husky add .husky/pre-commit &quot;npm run test&quot;\n\n并在pre-commit中写入邮箱的限制代码\n#!/bin/sh\n. &quot;$(dirname &quot;$0&quot;)/_/husky.sh&quot;\n\nEMAIL=$(git config user.email)\nif [[ ! $EMAIL =~ ^[.[:alnum:]]+@qq\\.com$ ]];\nthen\n  echo &quot;Your git information is not valid&quot;;\n  echo &quot;Please run:&quot;\n  echo &#39;   git config --local user.name &quot;&lt;Your name in qq&gt;&quot;&#39;\n  echo &#39;   git config --local user.email &quot;&lt;Your alias&gt;@qq.com&quot;&#39;\n  exit 1;\nfi;\n</code></pre></div><p>添加commit-msg钩子</p><div class="language-"><pre><code>npx husky add .husky/commit-msg &#39;npx --no-install commitlint --edit &quot;$1&quot;&#39;\n\n并在commit-msg写入commit代码时的规范限制\n#!/bin/sh\n. &quot;$(dirname &quot;$0&quot;)/_/husky.sh&quot;\n\nnpm run commitlint\n</code></pre></div><p>commitlint.config.js</p><div class="language-"><pre><code>module.exports = {\n  extends: [&#39;@commitlint/config-conventional&#39;],\n  // 检测规则\n  rules: {\n    &#39;type-enum&#39;: [\n      2,\n      &#39;always&#39;,\n      [\n        &#39;feat&#39;,\n        &#39;fix&#39;,\n        &#39;docs&#39;,\n        &#39;style&#39;,\n        &#39;refactor&#39;,\n        &#39;perf&#39;,\n        &#39;test&#39;,\n        &#39;chore&#39;,\n        &#39;revert&#39;,\n        &#39;build&#39;\n      ]\n    ],\n    &#39;type-case&#39;: [0],\n    &#39;type-empty&#39;: [0],\n    &#39;scope-empty&#39;: [0],\n    &#39;scope-case&#39;: [0],\n    &#39;subject-full-stop&#39;: [0, &#39;never&#39;],\n    &#39;subject-case&#39;: [0, &#39;never&#39;],\n    &#39;header-max-length&#39;: [0, &#39;always&#39;, 72]\n  }\n}\n</code></pre></div><p>这样在提交代码的时候，commit信息就必须遵循规范才能够提交，提交邮箱也是有限制的。</p><p><a href="https://juejin.cn/post/6947200436101185566#heading-4" target="_blank" rel="noopener noreferrer">参考GitHook 工具 </a></p><p><a href="https://zhuanlan.zhihu.com/p/366786798?ivk_sa=1024320u" target="_blank" rel="noopener noreferrer">参考husky使用总结</a></p>',16);a.render=function(t,o,a,u,r,s){return e(),n("div",null,[i])};export default a;export{o as __pageData};
