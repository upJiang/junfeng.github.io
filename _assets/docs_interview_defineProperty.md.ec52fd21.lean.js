import{g as e,f as n,j as t,l as r}from"./common-d6bd45c0.js";const o='{"title":"object.definePropert","frontmatter":{},"headers":[{"level":2,"title":"object.definePropert","slug":"object-definepropert"}],"relativePath":"docs/interview/defineProperty.md","lastUpdated":1627916530365.9597}';var l={};const a=t("h2",{id:"object-definepropert"},[t("a",{class:"header-anchor",href:"#object-definepropert","aria-hidden":"true"},"#"),r(" object.definePropert")],-1),d=t("p",null,"vue2.0 使用object.definePropert,监听对象的属性,无法监听对象增删，以及数组的变化（vue2.0自己写了许多hack把数据的一些操作方法给改写掉），需要深度遍历对象",-1),i=t("div",{class:"language-"},[t("pre",null,[t("code",null,"Object.defineProperty(data, key, \n    { \n        enumerable: true, \n        configurable: true, \n        get: function() { \n            console.log('get'); \n        },\n        set: function(newVal) { \n            // 当属性值发生变化时我们可以进行额外操作 \n            console.log(`大家好,我系${newVal}`); \n            say(newVal); \n        }\n    });\n")])],-1),c=t("p",null,"vue3.0 使用es6的proxy ，代理对象，直接监听整个对象的变化target，但是无法兼容ie，也无法被folyfill磨平",-1);l.render=function(t,r,o,l,f,p){return n(),e("div",null,[a,d,i,c])};export default l;export{o as __pageData};
