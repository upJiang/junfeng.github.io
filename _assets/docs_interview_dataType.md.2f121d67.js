import{g as t,f as o,E as e}from"./common-d6bd45c0.js";const a='{"title":"","frontmatter":{},"relativePath":"docs/interview/dataType.md","lastUpdated":1639657876154.966}';var r={};const n=e('<p>方式：typeof()，instanceof，Object.prototype.toString.call()</p><p>1.typeof()：只能区分基本类型即：number、string、undefined、boolean、object。</p><div class="language-"><pre><code>* 1.&quot;undefined&quot;——如果这个值未定义;\n* 2.&quot;boolean&quot;——如果这个值是布尔值;\n* 3.&quot;string&quot;——如果这个值是字符串;\n* 4.&quot;number&quot;——如果这个值是数值;\n* 5.&quot;object&quot;——如果这个值是对象或 null;\n* 6.&quot;function&quot;——如果这个值是函数。\n* 7.&quot;symbol&quot;——es6新增的symbol类型\n</code></pre></div><p>2.instanceof： 用来判断对象是不是某个构造函数的实例。会沿着原型链找的</p><p>3.Object.prototype.toString.call() 判断某个对象属于哪种内置类型 <a data-fancybox title="image.png" href="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/20d73f4ba81649f89ad96bbf244b50c3~tplv-k3u1fbpfcp-watermark.image?"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/20d73f4ba81649f89ad96bbf244b50c3~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></a></p><p>判断是否是数组：</p><ul><li>Array.isArray(arr)</li><li>Object.prototype.toString.call(arr) === &#39;[Object Array]&#39;</li><li>arr instanceof Array</li><li>array.constructor === Arra</li></ul>',7);r.render=function(e,a,r,i,p,c){return o(),t("div",null,[n])};export default r;export{a as __pageData};
