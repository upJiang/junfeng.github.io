import{g as t,f as e,E as s}from"./common-d6bd45c0.js";const r='{"title":"虚拟列表","frontmatter":{},"headers":[{"level":2,"title":"虚拟列表","slug":"虚拟列表"}],"relativePath":"docs/interview/longList.md","lastUpdated":1627916758258.4944}';var i={};const o=s('<p>长列表一直往下翻，一直加载数据，上万条如何优化?</p><blockquote><p>造成卡顿的原因是因为dom节点太多，使用虚拟列表，只渲染一定高度的dom节点便可解决</p></blockquote><h2 id="虚拟列表"><a class="header-anchor" href="#虚拟列表" aria-hidden="true">#</a> 虚拟列表</h2><p>虚假设10000条数据，每个item30px,列表容器装载10个数据即300px，总高度30px*10000</p><p>这些在mounted定义<br> item容器高度:30px<br> 数据列表总高度:30px<em>10000<br> 数据容器高度:30px * 10<br> 使用父容器相对定位，子容器列表绝对定位，设置父容器可滚动，<br> 高度为数据列表总高度30px</em>10000<br> 使用 computed动态计算当前十条数据，start初始0，end初始10，<br></p><div class="language-"><pre><code>showList(){ return this.list.slice(this.start, this.end); }\n</code></pre></div><p>监听scroll事件 scrollListener</p><div class="language-"><pre><code>scrollListener(){\n                //获取滚动高度\n                let scrollTop = this.$refs.listWrap.scrollTop;\n                //开始的数组索引\n                this.start = Math.floor(scrollTop / this.itemHeight);\n                //结束索引\n                this.end = this.start + this.showNum;\n                //绝对定位对相对定位的偏移量\n                this.$refs.list.style.top = this.start * this.itemHeight + &#39;px&#39;;\n}\n</code></pre></div><p>当滚动的时候会自动设置当前数据，以及滚动top值</p><p>除了这种虚拟列表，其实很多组件已经实现了这种功能</p>',10);i.render=function(s,r,i,l,p,n){return e(),t("div",null,[o])};export default i;export{r as __pageData};
